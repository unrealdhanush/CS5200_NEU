# Load required libraries
library(XML)
# Load the XML document with DTD validation
xmlpath <- paste0(getwd(),'CustomersAndOrders.xml')
xml_doc <- xmlParse(xmlpath, isURL = FALSE, useInternalNodes = TRUE, asText = TRUE)
xmlpath
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xmlpath <- paste0(getwd(),'/CustomersAndOrders.xml')
xml_doc <- xmlParse(xmlpath, isURL = FALSE, useInternalNodes = TRUE, asText = TRUE)
help("xmlParse")
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xmlpath <- paste0(getwd(),'/CustomersAndOrders.xml')
xml_doc <- xmlParse(file = xmlpath, isURL = FALSE, useInternalNodes = TRUE, asText = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xmlpath <- paste0(getwd(),'/CustomersAndOrders.xml')
xml_doc <- xmlParse(file = xmlpath, isURL = FALSE, useInternalNodes = TRUE, asText = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xmlpath <- paste0(getwd(),'/CustomersAndOrders.xml')
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, useInternalNodes = TRUE, asText = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, useInternalNodes = TRUE, asText = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, useInternalNodes = TRUE, asText = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, useInternalNodes = TRUE, asText = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, useInternalNodes = TRUE, asText = TRUE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, useInternalNodes = TRUE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Execute an XPath expression to get names of customers not living in "MA"
names_not_in_MA <- xpathSApply(xml_doc, "//Customer[FullAddress/Region != 'MA']/CompanyName", xmlValue)
# Count how many customers are not living in "MA"
count_customers_not_in_MA <- length(names_not_in_MA)
# Execute an XPath expression to get the total amount paid for freight for customer with ID "GREAL"
total_freight_for_GREAL <- xpathSApply(xml_doc, "//Order[CustomerID='GREAL']/ShipInfo/Freight", function(x) sum(as.numeric(x)))
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Execute an XPath expression to get names of customers not living in "MA"
names_not_in_MA <- xpathSApply(xml_doc, "//Customer[FullAddress/Region != 'MA']/CompanyName", xmlValue)
# Count how many customers are not living in "MA"
count_customers_not_in_MA <- length(names_not_in_MA)
# Execute an XPath expression to get the total amount paid for freight for customer with ID "GREAL"
total_freight_for_GREAL <- xpathSApply(xml_doc, "//Order[CustomerID='GREAL']/ShipInfo/Freight", xmlValue)
total_freight_for_GREAL <- sum(as.numeric(total_freight_for_GREAL))
# Execute an XPath expression to get the average amount paid for freight for all orders shipped to the USA
total_freight_USA <- xpathSApply(xml_doc, "//Order[ShipInfo/ShipCountry='USA']/ShipInfo/Freight", function(x) sum(as.numeric(x)))
# Load required libraries
library(XML)
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
# Execute an XPath expression to get names of customers not living in "MA"
names_not_in_MA <- xpathSApply(xml_doc, "//Customer[FullAddress/Region != 'MA']/CompanyName", xmlValue)
# Count how many customers are not living in "MA"
count_customers_not_in_MA <- length(names_not_in_MA)
# Execute an XPath expression to get the total amount paid for freight for customer with ID "GREAL"
total_freight_for_GREAL <- xpathSApply(xml_doc, "//Order[CustomerID='GREAL']/ShipInfo/Freight", xmlValue)
total_freight_for_GREAL <- sum(as.numeric(total_freight_for_GREAL))
# Execute an XPath expression to get the average amount paid for freight for all orders shipped to the USA
total_freight_USA <- xpathSApply(xml_doc, "//Order[ShipInfo/ShipCountry='USA']/ShipInfo/Freight", xmlValue)
total_freight_USA <- sum(as.numeric(total_freight_USA))
average_freight_USA <- mean(total_freight_USA)
# Output the results
cat("Names of customers that do not live in 'MA':\n", names_not_in_MA, "\n\n")
cat("Number of customers that do not live in 'MA':", count_customers_not_in_MA, "\n\n")
cat("Total amount paid for freight by customer with ID 'GREAL':", sum(total_freight_for_GREAL), "\n\n")
cat("Average amount paid for freight for all orders shipped to the USA:", average_freight_USA, "\n")
# Execute an XPath expression to get the total amount paid for freight for customer with ID "GREAL"
total_freight_for_GREAL <- xpathSApply(xml_doc, "//Order[CustomerID='GREAL']/ShipInfo/Freight", xmlValue)
sum_total_freight_for_GREAL <- sum(as.numeric(total_freight_for_GREAL))
cat("Total amount paid for freight by customer with ID 'GREAL':", sum_total_freight_for_GREAL, "\n\n")
# Execute an XPath expression to get the average amount paid for freight for all orders shipped to the USA
total_freight_USA <- xpathSApply(xml_doc, "//Order[ShipInfo/ShipCountry='USA']/ShipInfo/Freight", xmlValue)
total_freight_USA <- sum(as.numeric(total_freight_USA))
average_freight_USA <- mean(total_freight_USA)
cat("Average amount paid for freight for all orders shipped to the USA:", average_freight_USA, "\n")
# Execute an XPath expression to get names of customers not living in "MA"
names_not_in_MA <- xpathSApply(xml_doc, "//Customer[FullAddress/Region != 'MA']/CompanyName", xmlValue)
cat("Names of customers that do not live in 'MA':\n", names_not_in_MA, "\n\n")
# Load the XML document with DTD validation
xml_doc <- xmlParse(file = "CustomersAndOrders.xml", isURL = FALSE, validate = TRUE)
knitr::include_graphics("https://i.imgur.com/xNgvVHX.jpg")
knitr::include_graphics("https://i.imgur.com/xNgvVHX.jpg")
knitr::include_graphics("https://i.imgur.com/fltRtLE.jpg")
library(RSQLite)
dbcon <- dbConnect(RSQLite::SQLite(), "books.sqlite")
library(XML)
doc <- xmlParse("Books-v4.xml")
library(XML)
doc <- xmlParse("Books-v4.xml")
getwd()
setwd(~/Northeastern/2023summer/CS5200/CS5200.ParseXML.balakrishnaD)
setwd(Users/dhanush/Northeastern/2023summer/CS5200/CS5200.ParseXML.balakrishnaD)
setwd('Users/dhanush/Northeastern/2023summer/CS5200/CS5200.ParseXML.balakrishnaD')
getwd()
getwd()
